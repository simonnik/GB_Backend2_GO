version: "3.7"
services:
  api:
    build:
      dockerfile: dockerfile_api
      context: .
    command: "/app/api"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - RABBIT_SERVER_URL=amqp://guest:guest@rmq:5672
    ports:
      - 8081:80
    depends_on:
      - kafka
      - redis
  process:
    build:
      dockerfile: dockerfile_process
      context: .
    command: "/app/process"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - RABBIT_SERVER_URL=amqp://guest:guest@rmq:5672
    depends_on:
      - kafka
      - redis
  kafka:
    image: docker.io/bitnami/kafka:2-debian-10
    ports:
      - 9092:9092
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    healthcheck:
      test:
        [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 30s
      timeout: 10s
      retries: 4

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181

  redis:
    image: redis:6.0
    ports:
      - 6379:6379
  zookeeper:
    image: docker.io/bitnami/zookeeper:3-debian-10
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  rmq:
    image: "rabbitmq:3-management"
    ports:
      - "5672:5672"
      - "15672:15672"
